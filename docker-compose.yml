version: '3.8'

services:
  frontend:
    build: ./frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=HostRegexp(`{subdomain:.+}.yourdomain.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    environment:
      - TENANT_CONFIG_SERVICE_URL=http://backend:4000
    depends_on:
      - backend

  backend:
    build: ./backend
    environment:
      - DB_URL=postgres://postgres:postgres@db:5432/saas
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis

  chatbot:
    build: ./chatbot
    environment:
      - OPENAI_API_KEY=your_key_here
    depends_on:
      - backend

  email-engine:
    build: ./email-engine
    environment:
      - SMTP_HOST=mail
      - SMTP_PORT=1025
      - DB_URL=postgres://postgres:postgres@db:5432/saas
    depends_on:
      - db

  sms-engine:
    build: ./sms-engine
    environment:
      - SIGNALWIRE_TOKEN=your_token_here
      - DB_URL=postgres://postgres:postgres@db:5432/saas
    depends_on:
      - db

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: saas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine

  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=your@email.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"

volumes:
  db-data:
  letsencrypt:
